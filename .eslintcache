[{"/Users/phthphat/Project/template-react-proj/src/App.tsx":"1","/Users/phthphat/Project/template-react-proj/src/components/button/button.tsx":"2","/Users/phthphat/Project/template-react-proj/src/components/nav/nav.tsx":"3","/Users/phthphat/Project/template-react-proj/src/components/footer/footer.tsx":"4","/Users/phthphat/Project/template-react-proj/src/components/layout/common-layout/common-layout.tsx":"5","/Users/phthphat/Project/template-react-proj/src/pages/homepage/home-page.tsx":"6","/Users/phthphat/Project/template-react-proj/src/reportWebVitals.ts":"7","/Users/phthphat/Project/template-react-proj/src/helper/combine-class.ts":"8","/Users/phthphat/Project/template-react-proj/src/redux/user/userReducer.ts":"9","/Users/phthphat/Project/template-react-proj/src/redux/app/appContext.tsx":"10","/Users/phthphat/Project/template-react-proj/src/redux/system/systemReducer.ts":"11","/Users/phthphat/Project/template-react-proj/src/index.tsx":"12","/Users/phthphat/Project/template-react-proj/src/redux/system/systemAction.ts":"13","/Users/phthphat/Project/template-react-proj/src/redux/app/appReducer.ts":"14","/Users/phthphat/Project/template-react-proj/src/redux/user/userAction.ts":"15"},{"size":574,"mtime":1610000947771,"results":"16","hashOfConfig":"17"},{"size":514,"mtime":1610003709160,"results":"18","hashOfConfig":"17"},{"size":400,"mtime":1610000901257,"results":"19","hashOfConfig":"17"},{"size":408,"mtime":1610000901227,"results":"20","hashOfConfig":"17"},{"size":674,"mtime":1610001115204,"results":"21","hashOfConfig":"17"},{"size":374,"mtime":1610001016765,"results":"22","hashOfConfig":"17"},{"size":425,"mtime":1610000374917,"results":"23","hashOfConfig":"17"},{"size":346,"mtime":1610002900655,"results":"24","hashOfConfig":"17"},{"size":2927,"mtime":1610003131951,"results":"25","hashOfConfig":"17"},{"size":2475,"mtime":1610003365570,"results":"26","hashOfConfig":"17"},{"size":640,"mtime":1610003486252,"results":"27","hashOfConfig":"17"},{"size":455,"mtime":1610000374916,"results":"28","hashOfConfig":"17"},{"size":435,"mtime":1610003131948,"results":"29","hashOfConfig":"17"},{"size":611,"mtime":1610003131947,"results":"30","hashOfConfig":"17"},{"size":1342,"mtime":1610003131950,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"z442dz",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/phthphat/Project/template-react-proj/src/App.tsx",["65","66"],"/Users/phthphat/Project/template-react-proj/src/components/button/button.tsx",[],"/Users/phthphat/Project/template-react-proj/src/components/nav/nav.tsx",[],"/Users/phthphat/Project/template-react-proj/src/components/footer/footer.tsx",[],"/Users/phthphat/Project/template-react-proj/src/components/layout/common-layout/common-layout.tsx",[],["67","68"],"/Users/phthphat/Project/template-react-proj/src/pages/homepage/home-page.tsx",[],"/Users/phthphat/Project/template-react-proj/src/reportWebVitals.ts",[],"/Users/phthphat/Project/template-react-proj/src/helper/combine-class.ts",[],"/Users/phthphat/Project/template-react-proj/src/redux/user/userReducer.ts",["69","70"],"import { NavigationPage, Theme } from \"../app/appContext\";\nimport { UserAction, UserActionType } from \"./userAction\";\n\nexport interface UserState {\n    theme: Theme;\n    info: {\n        urlImage?: string\n        name?: string\n        token?: string\n    };\n    cart: { id: string, quantity: number }[]\n    page?: NavigationPage;\n    _number: number;\n}\nlet maxQuantity = 3\nexport const UserReducer = (\n    state: UserState,\n    action: UserAction\n): UserState => {\n    let newState = { ...state };\n    switch (action.type) {\n        case UserActionType.setTheme:\n            newState.theme = action.payload.theme;\n            break;\n        case UserActionType.setToken:\n            newState.info.token = action.payload.token;\n            break;\n        case UserActionType.increaseNumber:\n            newState._number = newState._number + 1;\n            break;\n        case UserActionType.visitPage:\n            newState.page = action.payload.page;\n            break;\n        case UserActionType.logInSuccess:\n            newState.info = { ...action.payload }\n            break;\n        case UserActionType.logInFailed:\n            break;\n        case UserActionType.modifyCart:\n            let existItems = newState.cart\n            let payload = action.payload\n            let existIndex = existItems.findIndex(val => { return val.id === payload.itemId })\n            if (existIndex != -1) {\n                //mean exist\n                console.log(`quantity ${existItems[existIndex].quantity}`)\n                let oldQuantity = existItems[existIndex].quantity\n                oldQuantity += payload.actionType === 'add' ? payload.quantity : -1 * payload.quantity\n                if (oldQuantity > maxQuantity) {\n                    alert(\"Mua xỉ liên hệ\")\n                } else {\n                    existItems[existIndex].quantity = oldQuantity\n                }\n                if (oldQuantity <= 0) {\n                    existItems.splice(existIndex, 1)\n                }\n\n            } else {\n                if (payload.actionType === 'add') {\n                    existItems.push({\n                        id: payload.itemId,\n                        quantity: payload.quantity\n                    })\n                }\n            }\n            localStorage[\"cart\"] = JSON.stringify(existItems)\n            break\n        case UserActionType.setCart:\n            newState.cart = action.payload.items\n            break\n        case UserActionType.removeCart:\n            let id = action.payload.productId\n            let firstIndex = newState.cart.findIndex(val => { return val.id === id })\n            console.log(`firstindex: ${firstIndex}`)\n            if (firstIndex != -1) {\n                newState.cart.splice(firstIndex, 1)\n            }\n            localStorage[\"cart\"] = JSON.stringify(newState.cart)\n            break\n    }\n    console.log(`New state: `)\n    console.log(newState)\n    return newState;\n};\n","/Users/phthphat/Project/template-react-proj/src/redux/app/appContext.tsx",[],"/Users/phthphat/Project/template-react-proj/src/redux/system/systemReducer.ts",["71"],"import { UserActionType } from \"../user/userAction\";\nimport { MsgType, SystemAction, SystemActionType } from \"./systemAction\";\n\nexport interface SystemState {\n    message?: {\n        text: string,\n        type: MsgType\n    }\n}\n\nexport const SystemReducer = (state: SystemState, action: SystemAction): SystemState => {\n    let newState = { ...state }\n    // console.log(action.payload)\n    switch (action.type) {\n        case SystemActionType.showMsg:\n            newState.message = action.payload\n            break\n        case SystemActionType.hideMsg:\n            newState.message = undefined\n            break\n    }\n    return newState\n}","/Users/phthphat/Project/template-react-proj/src/index.tsx",[],"/Users/phthphat/Project/template-react-proj/src/redux/system/systemAction.ts",[],"/Users/phthphat/Project/template-react-proj/src/redux/app/appReducer.ts",[],"/Users/phthphat/Project/template-react-proj/src/redux/user/userAction.ts",[],{"ruleId":"72","severity":1,"message":"73","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":14},{"ruleId":"76","severity":2,"message":"77","line":18,"column":8,"nodeType":"78","endLine":18,"endColumn":13},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":43,"column":28,"nodeType":"85","messageId":"86","endLine":43,"endColumn":30},{"ruleId":"83","severity":1,"message":"84","line":74,"column":28,"nodeType":"85","messageId":"86","endLine":74,"endColumn":30},{"ruleId":"72","severity":1,"message":"87","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":24},"@typescript-eslint/no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","react/jsx-no-undef","'Foote' is not defined.","JSXIdentifier","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'UserActionType' is defined but never used.","no-global-assign","no-unsafe-negation"]